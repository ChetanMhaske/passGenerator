/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package password.generator_captcha.verification;

/**
 *
 * @author cheta
 */
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.security.SecureRandom;
import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;


public class PasswordGenerator_CaptchaVerification extends JFrame {

    private String generatedCaptcha;
    /**
     * Creates new form PasswordGenerator_CaptchaVerification
     */
    public PasswordGenerator_CaptchaVerification() {
        initComponents();
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        passwordLabel = new javax.swing.JLabel();
        passwordLengthLabel = new javax.swing.JLabel();
        passwordStrengthLabel = new javax.swing.JLabel();
        enterCaptchaLabel = new javax.swing.JLabel();
        captchaLabel = new javax.swing.JLabel();
        generateButton = new javax.swing.JButton();
        passwordField = new javax.swing.JTextField();
        passwordLengthField = new javax.swing.JTextField();
        userCaptchaField = new javax.swing.JTextField();
        verifyButton = new javax.swing.JButton();
        lowercaseCheckBox = new javax.swing.JCheckBox();
        uppercaseCheckBox = new javax.swing.JCheckBox();
        numbersCheckBox = new javax.swing.JCheckBox();
        specialCharsCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));
        setForeground(new java.awt.Color(102, 102, 102));

        passwordLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        passwordLabel.setText("Entered or Generated Password : ");

        passwordLengthLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        passwordLengthLabel.setText("Length of Password :");

        passwordStrengthLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        passwordStrengthLabel.setText("Password Strength :");

        enterCaptchaLabel.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        enterCaptchaLabel.setText("Enter Captcha :");

        captchaLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        captchaLabel.setText("CAPTCHA : ");

        generateButton.setText("Generate Password and CAPTCHA");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        passwordField.setEditable(false);

        userCaptchaField.setText("Enter Above Captcha");

        verifyButton.setText("Verify CAPTCHA");
        verifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifyButtonActionPerformed(evt);
            }
        });

        lowercaseCheckBox.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        lowercaseCheckBox.setText("Lowercase");

        uppercaseCheckBox.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        uppercaseCheckBox.setText("Uppercase");

        numbersCheckBox.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        numbersCheckBox.setText("Numbers");
        numbersCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numbersCheckBoxActionPerformed(evt);
            }
        });

        specialCharsCheckBox.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        specialCharsCheckBox.setText("Special Character");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(enterCaptchaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(userCaptchaField, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(verifyButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(passwordLabel)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lowercaseCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(uppercaseCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(passwordField))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(passwordLengthField, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(numbersCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(specialCharsCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                            .addComponent(captchaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(passwordStrengthLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(passwordLengthLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(generateButton)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLengthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordLengthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lowercaseCheckBox)
                    .addComponent(uppercaseCheckBox)
                    .addComponent(numbersCheckBox)
                    .addComponent(specialCharsCheckBox))
                .addGap(18, 18, 18)
                .addComponent(passwordStrengthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(captchaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(generateButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterCaptchaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userCaptchaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(verifyButton))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void numbersCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numbersCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numbersCheckBoxActionPerformed

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        // TODO add your handling code here:
        String generatedPassword = generateSecurePassword();
            passwordField.setText(generatedPassword);

            // Check password strength
            String strength = getPasswordStrength(generatedPassword);
            passwordStrengthLabel.setText("Strength: " + strength);

            // Generate CAPTCHA
            generatedCaptcha = generateCaptcha(6); // Change the length as needed
            captchaLabel.setText("CAPTCHA: " + generatedCaptcha);   
            animateLabel(passwordStrengthLabel);
    }//GEN-LAST:event_generateButtonActionPerformed

    private void verifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifyButtonActionPerformed
        // TODO add your handling code here:
        if (generatedCaptcha == null) {
                JOptionPane.showMessageDialog(PasswordGenerator_CaptchaVerification.this, "Please generate CAPTCHA first.");
                return;
            }
            // Verify user input
            String userCaptcha = userCaptchaField.getText();
            if (userCaptcha.equals(generatedCaptcha)) {
                JOptionPane.showMessageDialog(PasswordGenerator_CaptchaVerification.this, "CAPTCHA verified! You can proceed.");
                // Clear the CAPTCHA label after verification for security
                captchaLabel.setText("CAPTCHA:");
            } else {
                JOptionPane.showMessageDialog(PasswordGenerator_CaptchaVerification.this, "Incorrect CAPTCHA. Please try again.");
            }
    }//GEN-LAST:event_verifyButtonActionPerformed

    private void animateLabel(JLabel label) {
        Timer timer = new Timer();
        timer.schedule(new TimerTask() {
            int count = 0;
            @Override
            public void run() {
                if (count % 2 == 0) {
                    label.setForeground(Color.BLACK); // Fade in
                } else {
                    label.setForeground(Color.GRAY); // Fade out
                }
                count++;
                if (count == 6) { // Duration of animation (6 * 100 ms = 600 ms)
                    timer.cancel();
                }
            }
        }, 0, 100); // Repeat every 100 ms
    }
    public String generateSecurePassword() {
        int passwordLength;
        try {
            passwordLength = Integer.parseInt(passwordLengthField.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid password length.");
            return "";
        }

        StringBuilder allCharsBuilder = new StringBuilder();
        if (lowercaseCheckBox.isSelected()) {
            allCharsBuilder.append("abcdefghijklmnopqrstuvwxyz");
        }
        if (uppercaseCheckBox.isSelected()) {
            allCharsBuilder.append("ABCDEFGHIJKLMNOPQRSTUVWXYZ");
        }
        if (numbersCheckBox.isSelected()) {
            allCharsBuilder.append("0123456789");
        }
        if (specialCharsCheckBox.isSelected()) {
            allCharsBuilder.append("!@#$%^&*()_+{}[]:;<>,.?/");
        }
        String allChars = allCharsBuilder.toString();
        if (allChars.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please select at least one character type.");
            return "";
        }

        Random random = new SecureRandom();

        StringBuilder password = new StringBuilder();
        for (int i = 0; i < passwordLength; i++) {
            int index = random.nextInt(allChars.length());
            password.append(allChars.charAt(index));
        }

        return password.toString();
    }

    public String getPasswordStrength(String password) {
        int score = 0;
        if (password.length() >= 8) {
            score++;
        }
        if (password.matches(".*[a-z].*")) {
            score++;
        }
        if (password.matches(".*[A-Z].*")) {
            score++;
        }
        if (password.matches(".*\\d.*")) {
            score++;
        }
        if (password.matches(".*[!@#$%^&*()_+{}\\[\\]:;<>,.?/].*")) {
            score++;
        }

        if (score <= 2) {
            return "Password is Weak";
        } else if (score <= 3) {
            return "Password is Moderate";
        } else if (score <= 4) {
            return "Password is Strong";
        } else {
            return "Password is Very Strong";
        }
    }

    public static String generateCaptcha(int length) {
        String characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
        StringBuilder captcha = new StringBuilder();

        Random random = new Random();
        for (int i = 0; i < length; i++) {
            int index = random.nextInt(characters.length());
            captcha.append(characters.charAt(index));
        }

        return captcha.toString();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PasswordGenerator_CaptchaVerification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PasswordGenerator_CaptchaVerification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PasswordGenerator_CaptchaVerification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PasswordGenerator_CaptchaVerification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PasswordGenerator_CaptchaVerification().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel captchaLabel;
    private javax.swing.JLabel enterCaptchaLabel;
    private javax.swing.JButton generateButton;
    private javax.swing.JCheckBox lowercaseCheckBox;
    private javax.swing.JCheckBox numbersCheckBox;
    private javax.swing.JTextField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JTextField passwordLengthField;
    private javax.swing.JLabel passwordLengthLabel;
    private javax.swing.JLabel passwordStrengthLabel;
    private javax.swing.JCheckBox specialCharsCheckBox;
    private javax.swing.JCheckBox uppercaseCheckBox;
    private javax.swing.JTextField userCaptchaField;
    private javax.swing.JButton verifyButton;
    // End of variables declaration//GEN-END:variables
}
